---
export interface Props {
	title?: string;
	subtitle?: string;
	description?: string;
	placeholder?: string;
	buttonText?: string;
	backgroundColor?: string;
	textColor?: string;
	containerMaxWidth?: string;
}

const {
	title = "Receba a programação atualizada",
	subtitle = "de passeios e excursões!",
	description = "Fique por dentro das próximas saídas, ofertas especiais e novidades exclusivas. Vamos juntos explorar novos destinos!",
	placeholder = "Digite aqui seu e-mail",
	buttonText = "Eu Quero!",
	backgroundColor = "#1e3a8a",
	textColor = "#ffffff",
	containerMaxWidth = "1200px"
} = Astro.props;
---

<section class="newsletter-section" style={`background: ${backgroundColor}; color: ${textColor};`}>
	<div class="container" style={`max-width: ${containerMaxWidth};`}>
		<div class="newsletter-content">
			<div class="main-content">
				<div class="mascot-container">
					<img 
						src="/assets/mascchamando.png" 
						alt="Mascote Partiu Viagem" 
						class="mascot-image"
					/>
				</div>
				<div class="content-wrapper">
					<div class="text-content">
						<h2 class="newsletter-title">
							{title}<br/>
							<span class="subtitle">{subtitle}</span>
						</h2>
						<p class="newsletter-description">{description}</p>
					</div>

					<div class="newsletter-form">
						<form class="email-form" id="newsletterForm">
							<div class="input-group">
								<input 
									type="email" 
									class="email-input" 
									placeholder={placeholder}
									required
									id="emailInput"
								/>
								<button type="submit" class="submit-btn">
									{buttonText}
								</button>
							</div>
							<div class="form-message" id="formMessage"></div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<style>
	.newsletter-section {
		padding: 4rem 2rem;
		position: relative;
		overflow: hidden;
	}

	.container {
		margin: 0 auto;
		padding: 0;
	}

	.newsletter-content {
		position: relative;
	}

	.main-content {
		display: flex;
		align-items: center;
		gap: 3rem;
		max-width: 1000px;
		margin: 0 auto;
	}

	.mascot-container {
		flex: 0 0 auto;
		max-width: 300px;
	}

	.mascot-image {
		width: 100%;
		height: auto;
		filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.15));
	}

	.content-wrapper {
		flex: 1;
		padding-right: 2rem;
	}

	.text-content {
		margin-bottom: 2rem;
	}

	.newsletter-title {
		font-size: 2.5rem;
		font-weight: 700;
		line-height: 1.2;
		margin-bottom: 1rem;
		color: inherit;
	}

	.subtitle {
		display: block;
		color: #fbbf24;
		font-weight: 600;
	}

	.newsletter-description {
		font-size: 1.1rem;
		line-height: 1.6;
		opacity: 0.9;
		margin: 0;
	}

	.input-group {
		display: flex;
		gap: 1rem;
		background: white;
		border-radius: 50px;
		padding: 0.5rem;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	}

	.email-input {
		flex: 1;
		padding: 1rem 1.5rem;
		border: none;
		outline: none;
		border-radius: 25px;
		font-size: 1rem;
		color: #374151;
	}

	.submit-btn {
		background: #10b981;
		color: white;
		border: none;
		padding: 1rem 2rem;
		border-radius: 25px;
		font-weight: 600;
		cursor: pointer;
		transition: background-color 0.3s;
	}

	.submit-btn:hover {
		background: #059669;
	}

	.form-message {
		margin-top: 1rem;
		padding: 0.5rem;
		border-radius: 8px;
		font-size: 0.9rem;
		text-align: center;
	}

	@media (max-width: 768px) {
		.newsletter-section {
			padding: 3rem 1rem;
		}

		.main-content {
			flex-direction: column;
			text-align: center;
			gap: 2rem;
		}

		.mascot-container {
			max-width: 200px;
			margin: 0 auto;
		}

		.content-wrapper {
			padding-right: 0;
		}

		.newsletter-title {
			font-size: 2rem;
		}

		.input-group {
			flex-direction: column;
			gap: 0.75rem;
			padding: 0.75rem;
		}

		.email-input,
		.submit-btn {
			width: 100%;
			text-align: center;
		}
	}

	@media (max-width: 480px) {
		.newsletter-section {
			padding: 2rem 1rem;
		}

		.mascot-container {
			max-width: 150px;
		}

		.newsletter-title {
			font-size: 1.75rem;
		}

		.newsletter-description {
			font-size: 1rem;
		}
	}
</style>

<script>
	class NewsletterForm {
		constructor() {
			this.form = document.getElementById('newsletterForm');
			this.emailInput = document.getElementById('emailInput');
			this.messageDiv = document.getElementById('formMessage');

			if (this.form) {
				this.init();
			}
		}

		init() {
			this.form.addEventListener('submit', (e) => this.handleSubmit(e));
		}

		async handleSubmit(e) {
			e.preventDefault();
			
			const email = this.emailInput.value.trim();
			
			if (!this.isValidEmail(email)) {
				this.showMessage('Por favor, insira um e-mail válido.', 'error');
				return;
			}

			this.showMessage('Processando...', 'info');
			
			try {
				await new Promise(resolve => setTimeout(resolve, 1500));
				this.showMessage('Obrigado! Você foi inscrito com sucesso em nossa newsletter.', 'success');
				this.emailInput.value = '';
			} catch (error) {
				this.showMessage('Erro ao processar inscrição. Tente novamente.', 'error');
			}
		}

		isValidEmail(email) {
			const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
			return emailRegex.test(email);
		}

		showMessage(message, type) {
			this.messageDiv.textContent = message;
			this.messageDiv.className = `form-message ${type} show`;
			
			setTimeout(() => {
				this.messageDiv.classList.remove('show');
			}, 5000);
		}
	}

	document.addEventListener('DOMContentLoaded', () => {
		new NewsletterForm();
	});
</script>