---
export interface Props {
	title?: string;
	subtitle?: string;
	description?: string;
	testimonials?: {
		name: string;
		location: string;
		rating: number;
		comment: string;
		avatar: string;
	}[];
	partnerLogos?: {
		name: string;
		logo: string;
		alt: string;
	}[];
	backgroundColor?: string;
	textColor?: string;
	containerMaxWidth?: string;
}

const {
	title = "Recomendados por mais de 5.000 clientes!",
	subtitle = "",
	description = "Lorem ipsum dolor sit amet consectetur. Aliquet malesuada tellus viverra ultricies egestas sociis gravida sem. Enim elit massa ullamcorper erat.",
	testimonials = [
		{
			name: "João Silva",
			location: "NOVA YORK",
			rating: 5,
			comment: "Lorem ipsum dolor sit amet consectetur. Aliquet malesuada tellus viverra ultricies egestas sociis gravida sem. Enim elit massa ullamcorper erat.",
			avatar: "/api/placeholder/60/60"
		},
		{
			name: "Maria Santos",
			location: "PARIS",
			rating: 5,
			comment: "Experiência incrível! A viagem superou todas as expectativas. Atendimento excepcional e destinos maravilhosos.",
			avatar: "/api/placeholder/60/60"
		},
		{
			name: "Pedro Costa",
			location: "TÓQUIO",
			rating: 5,
			comment: "Organização perfeita, guias experientes e momentos inesquecíveis. Recomendo para todos que buscam aventura.",
			avatar: "/api/placeholder/60/60"
		}
	],
	partnerLogos = [
		{ name: "TripAdvisor", logo: "/api/placeholder/120/40", alt: "TripAdvisor" },
		{ name: "Expedia", logo: "/api/placeholder/120/40", alt: "Expedia" },
		{ name: "Booking.com", logo: "/api/placeholder/120/40", alt: "Booking.com" },
		{ name: "Airbnb", logo: "/api/placeholder/120/40", alt: "Airbnb" }
	],
	backgroundColor = "#f8fafc",
	textColor = "#1f2937",
	containerMaxWidth = "1200px"
} = Astro.props;
---

<section id="testimonials" class="testimonials-section" style={`background-color: ${backgroundColor}; color: ${textColor};`}>
	<div class="container" style={`max-width: ${containerMaxWidth};`}>
		<div class="content-wrapper">
			<!-- Seção de Título -->
			<div class="title-section">
				{subtitle && <p class="subtitle">{subtitle}</p>}
				<h2 class="main-title">{title}</h2>
				{description && <p class="description">{description}</p>}
			</div>

			<!-- Seção de Depoimentos -->
			<div class="testimonials-section-content">
				<div class="testimonials-carousel">
					<div class="testimonials-track" id="testimonialsTrack">
						{testimonials.map((testimonial, index) => (
							<div class="testimonial-card" data-index={index}>
								<div class="testimonial-header">
									<div class="location-badge">
										<svg width="12" height="12" viewBox="0 0 24 24" fill="none">
											<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
											<circle cx="12" cy="10" r="3" stroke="currentColor" stroke-width="2"/>
										</svg>
										{testimonial.location}
									</div>
									<div class="rating">
										<span class="rating-number">{testimonial.rating}</span>
										<div class="stars">
											{Array.from({ length: 5 }, (_, i) => (
												<span class={`star ${i < testimonial.rating ? 'filled' : ''}`}>★</span>
											))}
										</div>
									</div>
								</div>
								<div class="testimonial-content">
									<p class="comment">"{testimonial.comment}"</p>
									<div class="author">
										<img src={testimonial.avatar} alt={testimonial.name} class="avatar" />
										<span class="name">{testimonial.name}</span>
									</div>
								</div>
							</div>
						))}
					</div>
					
					<!-- Controles do Carousel -->
					<div class="carousel-controls">
						<button class="carousel-btn prev" id="prevBtn">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none">
								<path d="M15 18l-6-6 6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
							</svg>
						</button>
						<button class="carousel-btn next" id="nextBtn">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none">
								<path d="M9 18l6-6-6-6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
							</svg>
						</button>
					</div>
				</div>
			</div>
		</div>

		<!-- Seção de Parceiros -->
		{partnerLogos && partnerLogos.length > 0 && (
			<div class="partners-section">
				<div class="partners-grid">
					{partnerLogos.map((partner) => (
						<div class="partner-logo">
							<img src={partner.logo} alt={partner.alt} />
						</div>
					))}
				</div>
			</div>
		)}
	</div>
</section>

<style>
	.testimonials-section {
		padding: 4rem 0;
		position: relative;
		scroll-margin-top: 120px; /* Adjust for fixed header */
	}

	.container {
		margin: 0 auto;
		padding: 0 2rem;
	}

	.content-wrapper {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 4rem;
		align-items: center;
		margin-bottom: 4rem;
	}

	.title-section {
		max-width: 500px;
	}

	.subtitle {
		color: #10b981;
		font-weight: 600;
		margin-bottom: 0.5rem;
		font-size: 0.9rem;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}

	.main-title {
		font-size: 2.5rem;
		font-weight: 700;
		line-height: 1.2;
		margin-bottom: 1.5rem;
		color: inherit;
	}

	.description {
		font-size: 1.1rem;
		line-height: 1.6;
		color: #6b7280;
		margin: 0;
	}

	.testimonials-section-content {
		position: relative;
	}

	.testimonials-carousel {
		position: relative;
		overflow: hidden;
		border-radius: 16px;
	}

	.testimonials-track {
		display: flex;
		transition: transform 0.5s ease;
		cursor: grab;
		user-select: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
	}

	.testimonials-track:active {
		cursor: grabbing;
	}

	.testimonial-card {
		min-width: 100%;
		background: white;
		border-radius: 16px;
		padding: 2rem;
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
		border: 1px solid #e5e7eb;
	}

	.testimonial-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 1.5rem;
	}

	.location-badge {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		background: #f3f4f6;
		padding: 0.5rem 1rem;
		border-radius: 20px;
		font-size: 0.8rem;
		font-weight: 600;
		color: #374151;
	}

	.location-badge svg {
		color: #10b981;
	}

	.rating {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.rating-number {
		font-weight: 700;
		font-size: 1.1rem;
		color: #1f2937;
	}

	.stars {
		display: flex;
		gap: 0.2rem;
	}

	.star {
		color: #d1d5db;
		font-size: 1.2rem;
	}

	.star.filled {
		color: #fbbf24;
	}

	.testimonial-content {
		text-align: left;
	}

	.comment {
		font-size: 1rem;
		line-height: 1.6;
		color: #4b5563;
		margin-bottom: 1.5rem;
		font-style: italic;
	}

	.author {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.avatar {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		object-fit: cover;
		border: 3px solid #10b981;
	}

	.name {
		font-weight: 600;
		color: #1f2937;
	}

	.carousel-controls {
		display: flex;
		justify-content: center;
		gap: 1rem;
		margin-top: 2rem;
	}

	.carousel-btn {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		border: 2px solid #e5e7eb;
		background: white;
		color: #6b7280;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.carousel-btn:hover {
		border-color: #10b981;
		color: #10b981;
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);
	}

	.carousel-btn:disabled {
		opacity: 0.5;
		cursor: not-allowed;
		transform: none;
		box-shadow: none;
	}

	.partners-section {
		border-top: 1px solid #e5e7eb;
		padding-top: 3rem;
	}

	.partners-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
		gap: 2rem;
		align-items: center;
		justify-items: center;
	}

	.partner-logo {
		opacity: 0.6;
		transition: opacity 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.partner-logo:hover {
		opacity: 1;
	}

	.partner-logo img {
		max-height: 40px;
		max-width: 120px;
		object-fit: contain;
		filter: grayscale(100%);
		transition: filter 0.3s ease;
	}

	.partner-logo:hover img {
		filter: grayscale(0%);
	}

	/* Tablet responsiveness */
	@media (max-width: 1024px) {
		.content-wrapper {
			gap: 3rem;
		}

		.main-title {
			font-size: 2.2rem;
		}

		.testimonial-card {
			padding: 1.75rem;
		}
	}

	/* Mobile responsiveness */
	@media (max-width: 768px) {
		.testimonials-section {
			padding: 3rem 0;
		}

		.container {
			padding: 0 1rem;
		}

		.content-wrapper {
			grid-template-columns: 1fr;
			gap: 2rem;
			text-align: center;
			margin-bottom: 3rem;
		}

		.title-section {
			max-width: 100%;
		}

		.main-title {
			font-size: 2rem;
			line-height: 1.1;
			margin-bottom: 1rem;
		}

		.description {
			font-size: 1rem;
			line-height: 1.5;
		}

		.testimonials-section-content {
			width: 100%;
		}

		.testimonial-card {
			padding: 1.5rem;
			margin: 0 0.5rem;
			box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
		}

		.testimonial-header {
			flex-direction: column;
			gap: 1rem;
			align-items: center;
			text-align: center;
		}

		.location-badge {
			font-size: 0.75rem;
			padding: 0.4rem 0.8rem;
		}

		.rating {
			justify-content: center;
		}

		.comment {
			font-size: 0.95rem;
			text-align: center;
			margin-bottom: 1.25rem;
		}

		.author {
			justify-content: center;
			flex-direction: column;
			gap: 0.75rem;
			text-align: center;
		}

		.avatar {
			width: 60px;
			height: 60px;
		}

		.carousel-controls {
			margin-top: 1.5rem;
			gap: 0.75rem;
		}

		.carousel-btn {
			width: 45px;
			height: 45px;
			touch-action: manipulation;
		}

		.partners-section {
			padding-top: 2rem;
		}

		.partners-grid {
			grid-template-columns: repeat(2, 1fr);
			gap: 1.5rem;
		}
	}

	/* Small mobile devices */
	@media (max-width: 480px) {
		.testimonials-section {
			padding: 2.5rem 0;
		}

		.container {
			padding: 0 0.75rem;
		}

		.content-wrapper {
			gap: 1.5rem;
			margin-bottom: 2rem;
		}

		.main-title {
			font-size: 1.75rem;
			line-height: 1.1;
		}

		.description {
			font-size: 0.95rem;
		}

		.testimonial-card {
			padding: 1.25rem;
			margin: 0 0.25rem;
		}

		.location-badge {
			font-size: 0.7rem;
			padding: 0.35rem 0.7rem;
		}

		.rating-number {
			font-size: 1rem;
		}

		.star {
			font-size: 1.1rem;
		}

		.comment {
			font-size: 0.9rem;
			line-height: 1.5;
		}

		.avatar {
			width: 50px;
			height: 50px;
		}

		.name {
			font-size: 0.95rem;
		}

		.carousel-btn {
			width: 40px;
			height: 40px;
		}

		.partners-grid {
			grid-template-columns: 1fr 1fr;
			gap: 1rem;
		}

		.partner-logo img {
			max-height: 35px;
			max-width: 100px;
		}
	}

	/* Touch device optimizations */
	@media (hover: none) and (pointer: coarse) {
		.carousel-btn {
			min-width: 48px;
			min-height: 48px;
			touch-action: manipulation;
		}

		.carousel-btn:hover {
			transform: none; /* Remove hover transforms on touch devices */
		}

		.partner-logo:hover {
			transform: none;
		}
	}
</style>

<script>
	class TestimonialsCarousel {
		constructor() {
			this.currentIndex = 0;
			this.track = document.getElementById('testimonialsTrack');
			this.prevBtn = document.getElementById('prevBtn');
			this.nextBtn = document.getElementById('nextBtn');
			this.cards = document.querySelectorAll('.testimonial-card');
			this.totalCards = this.cards.length;
			this.autoPlayInterval = null;
			this.isAutoPlaying = true;

			// Touch/swipe properties
			this.startX = 0;
			this.currentX = 0;
			this.isDragging = false;
			this.threshold = 50; // minimum distance for swipe

			if (this.track && this.prevBtn && this.nextBtn) {
				this.init();
			}
		}

		init() {
			// Button controls
			this.prevBtn.addEventListener('click', () => this.prev());
			this.nextBtn.addEventListener('click', () => this.next());
			
			// Touch/swipe controls
			this.track.addEventListener('touchstart', (e) => this.handleTouchStart(e), { passive: true });
			this.track.addEventListener('touchmove', (e) => this.handleTouchMove(e), { passive: true });
			this.track.addEventListener('touchend', (e) => this.handleTouchEnd(e), { passive: true });
			
			// Mouse events for desktop drag (optional)
			this.track.addEventListener('mousedown', (e) => this.handleMouseStart(e));
			this.track.addEventListener('mousemove', (e) => this.handleMouseMove(e));
			this.track.addEventListener('mouseup', (e) => this.handleMouseEnd(e));
			this.track.addEventListener('mouseleave', (e) => this.handleMouseEnd(e));
			
			// Pause auto-play on interaction
			this.track.addEventListener('touchstart', () => this.pauseAutoPlay());
			this.track.addEventListener('mouseenter', () => this.pauseAutoPlay());
			this.track.addEventListener('mouseleave', () => this.resumeAutoPlay());
			
			this.updateButtons();
			this.startAutoPlay();
		}

		// Touch event handlers
		handleTouchStart(e) {
			this.startX = e.touches[0].clientX;
			this.isDragging = true;
		}

		handleTouchMove(e) {
			if (!this.isDragging) return;
			this.currentX = e.touches[0].clientX;
		}

		handleTouchEnd(e) {
			if (!this.isDragging) return;
			this.isDragging = false;
			
			const deltaX = this.startX - this.currentX;
			
			if (Math.abs(deltaX) > this.threshold) {
				if (deltaX > 0) {
					this.next(); // Swipe left - next
				} else {
					this.prev(); // Swipe right - previous
				}
			}
			
			this.resumeAutoPlay();
		}

		// Mouse event handlers (for desktop)
		handleMouseStart(e) {
			e.preventDefault();
			this.startX = e.clientX;
			this.isDragging = true;
			this.track.style.cursor = 'grabbing';
		}

		handleMouseMove(e) {
			if (!this.isDragging) return;
			e.preventDefault();
			this.currentX = e.clientX;
		}

		handleMouseEnd(e) {
			if (!this.isDragging) return;
			this.isDragging = false;
			this.track.style.cursor = 'grab';
			
			const deltaX = this.startX - this.currentX;
			
			if (Math.abs(deltaX) > this.threshold) {
				if (deltaX > 0) {
					this.next();
				} else {
					this.prev();
				}
			}
		}

		prev() {
			this.currentIndex = this.currentIndex > 0 ? this.currentIndex - 1 : this.totalCards - 1;
			this.updateCarousel();
		}

		next() {
			this.currentIndex = this.currentIndex < this.totalCards - 1 ? this.currentIndex + 1 : 0;
			this.updateCarousel();
		}

		updateCarousel() {
			const translateX = -this.currentIndex * 100;
			this.track.style.transform = `translateX(${translateX}%)`;
			this.updateButtons();
		}

		updateButtons() {
			// For infinite loop, we don't disable buttons
			// this.prevBtn.disabled = this.currentIndex === 0;
			// this.nextBtn.disabled = this.currentIndex === this.totalCards - 1;
		}

		startAutoPlay() {
			if (this.totalCards <= 1) return;
			this.autoPlayInterval = setInterval(() => {
				if (this.isAutoPlaying) {
					this.next();
				}
			}, 5000);
		}

		pauseAutoPlay() {
			this.isAutoPlaying = false;
		}

		resumeAutoPlay() {
			setTimeout(() => {
				this.isAutoPlaying = true;
			}, 3000); // Resume after 3 seconds
		}

		destroy() {
			if (this.autoPlayInterval) {
				clearInterval(this.autoPlayInterval);
			}
		}
	}

	// Inicializar quando o DOM estiver carregado
	document.addEventListener('DOMContentLoaded', () => {
		new TestimonialsCarousel();
	});
</script>